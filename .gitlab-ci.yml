variables:
  PYLINT_IMG: registry.radiobretzel.org/hosting/dockerfile-store/python:pylint


stages:
  - build
  - lint
  - test
  - release
  - cleanup


build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA .


pylint:
  stage: lint
  image: $PYLINT_IMG
  except:
    refs:
      - master
  allow_failure: True
  script:
    - python -m pylint rbcore
    - python -m pylint tests
    - python -m pylint setup.py

pylint_master:
  stage: lint
  image: $PYLINT_IMG
  only:
    refs:
      - master
  script:
    - python -m pylint rbcore
    - python -m pylint tests
    - python -m pylint setup.py


pytest:
  stage: test
  image: $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
  services:
    - name: mongo:latest
      alias: "test-db"
  variables:
    FLASK_ENV: "development"
    RBCORE_MONGO_HOST: "test-db"
  script:
    - pip install .[test]
    - python setup.py test


release:
  stage: release
  when: on_success
  only:
    refs:
      - develop
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker tag $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME

release_latest:
  stage: release
  when: on_success
  only:
    refs:
      - master
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker tag $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/$CI_PROJECT_PATH:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:latest


cleanup_fail:
  stage: cleanup
  when: on_failure
  script:
    - docker image rm -f $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
